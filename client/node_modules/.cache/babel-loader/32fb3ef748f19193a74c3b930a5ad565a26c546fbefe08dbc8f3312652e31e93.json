{"ast":null,"code":"var _jsxFileName = \"/var/www/Projects/mern/BookingApp/client/src/components/Reserve.js\",\n  _s = $RefreshSig$();\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faCircleXmark } from \"@fortawesome/free-solid-svg-icons\";\nimport \"./reserve.css\";\nimport useFetch from \"../hooks/useFetch\";\nimport { useContext, useState } from \"react\";\nimport { SearchContext } from \"../context/SearchContext\";\nimport axios from \"axios\";\nimport { useNavigate } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Reserve = _ref => {\n  _s();\n  let {\n    setOpen,\n    hotelId\n  } = _ref;\n  const [selectedRooms, setSelectedRooms] = useState([]);\n  const {\n    data,\n    loading,\n    error\n  } = useFetch(`/hotels/room/${hotelId}`);\n  const {\n    dates\n  } = useContext(SearchContext);\n  const getDatesInRange = (startDate, endDate) => {\n    const start = new Date(startDate);\n    const end = new Date(endDate);\n    const date = new Date(start.getTime());\n    const dates = [];\n    while (date <= end) {\n      dates.push(new Date(date).getTime());\n      date.setDate(date.getDate() + 1);\n    }\n    return dates;\n  };\n  const alldates = getDatesInRange(dates[0].startDate, dates[0].endDate);\n  const isAvailable = roomNumber => {\n    const isFound = roomNumber.unavailableDates.some(date => alldates.includes(new Date(date).getTime()));\n    return !isFound;\n  };\n  const handleSelect = e => {\n    const checked = e.target.checked;\n    const value = e.target.value;\n    setSelectedRooms(checked ? [...selectedRooms, value] : selectedRooms.filter(item => item !== value));\n  };\n  const navigate = useNavigate();\n  const handleClick = async () => {\n    try {\n      await Promise.all(selectedRooms.map(roomId => {\n        const res = axios.put(`/rooms/availability/${roomId}`, {\n          dates: alldates\n        });\n        return res.data;\n      }));\n      setOpen(false);\n      navigate(\"/\");\n    } catch (err) {}\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"reserve\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"rContainer\",\n      children: [/*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n        icon: faCircleXmark,\n        className: \"rClose\",\n        onClick: () => setOpen(false)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: \"Select your rooms:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 17\n      }, this), data.map(item => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"rItem\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"rItemInfo\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"rTitle\",\n            children: item.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"rDesc\",\n            children: item.desc\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"rMax\",\n            children: [\"Max people: \", /*#__PURE__*/_jsxDEV(\"b\", {\n              children: item.maxPeople\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 83,\n              columnNumber: 45\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"rPrice\",\n            children: item.price\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"rSelectRooms\",\n          children: item.roomNumbers.map(roomNumber => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"room\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: roomNumber.number\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 90,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"checkbox\",\n              value: roomNumber._id,\n              onChange: handleSelect,\n              disabled: !isAvailable(roomNumber)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 91,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 33\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 25\n        }, this)]\n      }, item._id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 21\n      }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleClick,\n        className: \"rButton\",\n        children: \"Reserve Now!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 9\n  }, this);\n};\n_s(Reserve, \"5KHWp6HLUFvCHih30z2R1WOqP3g=\", false, function () {\n  return [useFetch, useNavigate];\n});\n_c = Reserve;\nexport default Reserve;\nvar _c;\n$RefreshReg$(_c, \"Reserve\");","map":{"version":3,"names":["FontAwesomeIcon","faCircleXmark","useFetch","useContext","useState","SearchContext","axios","useNavigate","Reserve","setOpen","hotelId","selectedRooms","setSelectedRooms","data","loading","error","dates","getDatesInRange","startDate","endDate","start","Date","end","date","getTime","push","setDate","getDate","alldates","isAvailable","roomNumber","isFound","unavailableDates","some","includes","handleSelect","e","checked","target","value","filter","item","navigate","handleClick","Promise","all","map","roomId","res","put","err","title","desc","maxPeople","price","roomNumbers","number","_id"],"sources":["/var/www/Projects/mern/BookingApp/client/src/components/Reserve.js"],"sourcesContent":["import { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faCircleXmark } from \"@fortawesome/free-solid-svg-icons\";\n\nimport \"./reserve.css\";\nimport useFetch from \"../hooks/useFetch\";\nimport { useContext, useState } from \"react\";\nimport { SearchContext } from \"../context/SearchContext\";\nimport axios from \"axios\";\nimport { useNavigate } from \"react-router-dom\";\n\nconst Reserve = ({ setOpen, hotelId }) => {\n    const [selectedRooms, setSelectedRooms] = useState([]);\n    const { data, loading, error } = useFetch(`/hotels/room/${hotelId}`);\n    const { dates } = useContext(SearchContext);\n\n    const getDatesInRange = (startDate, endDate) => {\n        const start = new Date(startDate);\n        const end = new Date(endDate);\n\n        const date = new Date(start.getTime());\n\n        const dates = [];\n\n        while (date <= end) {\n            dates.push(new Date(date).getTime());\n            date.setDate(date.getDate() + 1);\n        }\n\n        return dates;\n    };\n\n    const alldates = getDatesInRange(dates[0].startDate, dates[0].endDate);\n\n    const isAvailable = (roomNumber) => {\n        const isFound = roomNumber.unavailableDates.some((date) =>\n            alldates.includes(new Date(date).getTime())\n        );\n\n        return !isFound;\n    };\n\n    const handleSelect = (e) => {\n        const checked = e.target.checked;\n        const value = e.target.value;\n        setSelectedRooms(\n            checked\n                ? [...selectedRooms, value]\n                : selectedRooms.filter((item) => item !== value)\n        );\n    };\n\n    const navigate = useNavigate();\n\n    const handleClick = async () => {\n        try {\n            await Promise.all(\n                selectedRooms.map((roomId) => {\n                    const res = axios.put(`/rooms/availability/${roomId}`, {\n                        dates: alldates,\n                    });\n                    return res.data;\n                })\n            );\n            setOpen(false);\n            navigate(\"/\");\n        } catch (err) { }\n    };\n    return (\n        <div className=\"reserve\">\n            <div className=\"rContainer\">\n                <FontAwesomeIcon\n                    icon={faCircleXmark}\n                    className=\"rClose\"\n                    onClick={() => setOpen(false)}\n                />\n                <span>Select your rooms:</span>\n                {data.map((item) => (\n                    <div className=\"rItem\" key={item._id}>\n                        <div className=\"rItemInfo\">\n                            <div className=\"rTitle\">{item.title}</div>\n                            <div className=\"rDesc\">{item.desc}</div>\n                            <div className=\"rMax\">\n                                Max people: <b>{item.maxPeople}</b>\n                            </div>\n                            <div className=\"rPrice\">{item.price}</div>\n                        </div>\n                        <div className=\"rSelectRooms\">\n                            {item.roomNumbers.map((roomNumber) => (\n                                <div className=\"room\">\n                                    <label>{roomNumber.number}</label>\n                                    <input\n                                        type=\"checkbox\"\n                                        value={roomNumber._id}\n                                        onChange={handleSelect}\n                                        disabled={!isAvailable(roomNumber)}\n                                    />\n                                </div>\n                            ))}\n                        </div>\n                    </div>\n                ))}\n                <button onClick={handleClick} className=\"rButton\">\n                    Reserve Now!\n                </button>\n            </div>\n        </div>\n    );\n};\n\nexport default Reserve;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}